#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó WebAssembly –º–æ–¥—É–ª—è

echo "üî® –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è WebAssembly –º–æ–¥—É–ª—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ..."

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Emscripten
if ! command -v emcc &> /dev/null; then
    echo "‚ùå Emscripten –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Emscripten SDK."
    echo "   https://emscripten.org/docs/getting_started/downloads.html"
    exit 1
fi

# –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è –∑–±—ñ—Ä–∫–∏
mkdir -p ../frontend/wasm

# –ö–æ–º–ø—ñ–ª—é—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å
echo "üì¶ –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è..."
emcc src/main.cpp src/exif-reader.cpp \
    -O3 \
    -s WASM=1 \
    -s EXPORTED_FUNCTIONS="[
        '_processPhoto',
        '_getProcessedCount',
        '_getPhotoMetadata',
        '_getFolderStructure',
        '_clearMetadata',
        '_getStatistics',
        '_sortPhotos',
        '_getVersion',
        '_createExifReader',
        '_destroyExifReader',
        '_readExifDate',
        '_readCameraMake',
        '_readCameraModel',
        '_readImageWidth',
        '_readImageHeight',
        '_hasExifData'
    ]" \
    -s EXPORTED_RUNTIME_METHODS="[
        'ccall',
        'cwrap',
        'getValue',
        'setValue',
        'UTF8ToString',
        'stringToUTF8',
        'lengthBytesUTF8'
    ]" \
    -s ALLOW_MEMORY_GROWTH=1 \
    -s MAXIMUM_MEMORY=256MB \
    -s MODULARIZE=1 \
    -s EXPORT_NAME="PhotoProcessor" \
    -s ENVIRONMENT='web' \
    -s SINGLE_FILE=0 \
    -o ../frontend/wasm/photo-processor.js

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ $? -eq 0 ]; then
    echo "‚úÖ WebAssembly –º–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ —Å–∫–æ–º–ø—ñ–ª—å–æ–≤–∞–Ω–æ!"
    echo "üìÅ –§–∞–π–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: ../frontend/wasm/"
    echo "   - photo-processor.wasm"
    echo "   - photo-processor.js"
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—ñ–≤
    echo ""
    echo "üìä –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—ñ–≤:"
    ls -lh ../frontend/wasm/photo-processor.*
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
    echo ""
    echo "üß™ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É..."
    cat > ../frontend/wasm/test.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>WASM Photo Processor Test</title>
</head>
<body>
    <h1>WebAssembly Photo Processor Test</h1>
    <div id="output"></div>
    
    <script src="photo-processor.js"></script>
    <script>
        PhotoProcessor().then(Module => {
            const output = document.getElementById('output');
            output.innerHTML = '<p>‚úÖ WASM –º–æ–¥—É–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!</p>';
            output.innerHTML += '<p>–í–µ—Ä—Å—ñ—è: ' + Module.ccall('getVersion', 'string', [], []) + '</p>';
        }).catch(err => {
            document.getElementById('output').innerHTML = '<p>‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ' + err + '</p>';
        });
    </script>
</body>
</html>
EOF
    
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: ../frontend/wasm/test.html"
    echo ""
    echo "üöÄ –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏–π—Ç–µ test.html –≤ –±—Ä–∞—É–∑–µ—Ä—ñ"
    
else
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó WebAssembly –º–æ–¥—É–ª—è"
    exit 1
fi
